name: General

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  APP_DATABASE__URI: mongodb://mongo:password@0.0.0.0:27017/

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    # service containers to run alongside the `test` container job
    services:
      # label used to access the service container
      mongo:
        image: mongo:latest
        options: --name mongodb
        # environment variables scoped only for the `mongo` service
        env:
          MONGO_INITDB_ROOT_USERNAME: mongo
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4

      # installs a rust toolchain using rustup, it's designed for one-line concise usage and good defaults
      # it also takes care of caching intermediate build artifacts
      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Init database
        run: SKIP_DOCKER=true ./scripts/init_db_mongo.sh

      - name: Run tests
        run: cargo test

  fmt:
    name: Rust fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt

      - name: Enforce formatting
        run: cargo fmt

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy

      - name: Linting
        run: cargo clippy --fix -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:latest
        options: --name mongodb
        env:
          MONGO_INITDB_ROOT_USERNAME: mongo
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4

      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: llvm-tools-preview

      - name: Init database
        run: SKIP_DOCKER=true ./scripts/init_db_mongo.sh

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Generate report
        run: cargo llvm-cov report --html --output-dir coverage

      - uses: actions/upload-artifact@v4
        with:
          name: "Coverage report"
          path: coverage/
